package com.dwprojects.controller;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

import com.dwprojects.model.User;
import com.dwprojects.service.UserService;

@ExtendWith(SpringExtension.class)
@WebMvcTest(controllers = UserController.class)
public class UserControllerTest 
{
	  @Autowired
	    MockMvc mockMvc;

	    @MockBean
	    UserService userService;
	    
	    @Test
	    public void getAllUsers() throws Exception{
	        List<User> userList = new ArrayList<>();
	        userList.add(new User("abc", "test@gmail.com", "first", "last", false));


	        given(userService.getAllUsers()).willReturn(userList);

	        mockMvc.perform(get("/users/"))
	                .andExpect(status().isOk())
	                .andExpect(jsonPath("$").isArray())
	                .andDo(print());
	    }
}
